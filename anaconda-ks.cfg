#version=RHEL7
# System authorization information
auth --useshadow --enablemd5
# Install OS instead of upgrade
install
# Reboot after installation
reboot
# Use CDROM installation media
cdrom
# Firewall configuration
firewall --enabled
firstboot --disable
ignoredisk --only-use=sda
# Keyboard layouts
# old format: keyboard us
# new format:
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network  --bootproto=dhcp
network  --hostname=localhost.localdomain
# Root password
rootpw --iscrypted $1$YZglDWNm$8YxbHojGfqAqXjNVymPyj1
# System services
services --enabled="chronyd"
# System timezone
timezone America/Los_Angeles --isUtc
# X Window System configuration information
xconfig  --startxonboot
# System bootloader configuration
bootloader --location=mbr --boot-drive=sda
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel 
# Disk partitioning information
part /boot --fstype="xfs" --size=300
part swap --fstype="swap" --size=2048
part / --fstype="xfs" --size=18131

%post
if [ -f /boot/grub/menu.lst -a ! -h /boot/grub/menu.lst ]; then cp /boot/grub/menu.lst /boot/grub/menu.lst.bak && sed -i 's/ rhgb//' /boot/grub/menu.lst; fi
if [ -f /boot/grub/grub.conf -a ! -h /boot/grub/grub.conf ]; then cp /boot/grub/grub.conf /boot/grub/grub.conf.bak && sed -i 's/ rhgb//' /boot/grub/grub.conf; fi
if [ -f /boot/grub2/grub.conf -a ! -h /boot/grub2/grub.conf ]; then cp /boot/grub2/grub.conf /boot/grub2/grub.conf.bak && sed -i 's/ rhgb//' /boot/grub2/grub.conf; fi
if [ -f /boot/grub2/grub.cfg -a ! -h /boot/grub2/grub.cfg ]; then cp /boot/grub2/grub.cfg /boot/grub2/grub.cfg.bak && sed -i 's/ rhgb//' /boot/grub2/grub.cfg; fi
mkdir -p /etc/vmware-tools/easy_install
cat >/etc/vmware-tools/easy_install/vmware-tools-firstboot.service <<EOF
[Unit]
Description=VMware Tools Installation
ConditionPathExists=!/etc/vmware-tools/config
Before=systemd-user-sessions.service

[Service]
ExecStart=/etc/vmware-tools/easy_install/vmware-tools-firstboot.sh
Type=oneshot
StandardOutput=journal+console

[Install]
WantedBy=systemd-user-sessions.service
EOF
systemctl enable /etc/vmware-tools/easy_install/vmware-tools-firstboot.service
cat >/etc/vmware-tools/easy_install/vmware-tools-firstboot.sh <<EOF
#!/bin/bash
echo
cat <<NESTEDEOF
************************************************
************************************************
            VMware Easy Install

  PLEASE WAIT! VMware Tools is currently being 
  installed on your system.  A login prompt will
  appear once this task completes.

************************************************
************************************************
NESTEDEOF
if [ -x /usr/sbin/getenforce ]; then oldenforce=\$(/usr/sbin/getenforce); /usr/sbin/setenforce permissive || true; fi
mkdir -p /tmp/vmware-toolsmnt0
for i in hda sr0 scd0; do mount -t iso9660 /dev/\$i /tmp/vmware-toolsmnt0 && break; done
cp -a /tmp/vmware-toolsmnt0 /opt/vmware-tools-installer
chmod 755 /opt/vmware-tools-installer
cd /opt/vmware-tools-installer
mv upgra32 vmware-tools-upgrader-32
mv upgra64 vmware-tools-upgrader-64
mv upgrade.sh run_upgrader.sh
chmod +x /opt/vmware-tools-installer/*upgr*
umount /tmp/vmware-toolsmnt0
rmdir /tmp/vmware-toolsmnt0
if [ -x /usr/bin/rhgb-client ]; then /usr/bin/rhgb-client --quit; fi
cd /opt/vmware-tools-installer
for s in sr0 sr1; do eject -s /dev/\$s; done
./run_upgrader.sh
rm -rf /opt/vmware-tools-installer
if [ -f /boot/grub/menu.lst.bak ]; then mv /boot/grub/menu.lst.bak /boot/grub/menu.lst; fi
if [ -f /boot/grub/grub.conf.bak ]; then mv /boot/grub/grub.conf.bak /boot/grub/grub.conf; fi
if [ -f /boot/grub2/grub.conf.bak ]; then mv /boot/grub2/grub.conf.bak /boot/grub2/grub.conf; fi
if [ -f /boot/grub2/grub.cfg.bak ]; then mv /boot/grub2/grub.cfg.bak /boot/grub2/grub.cfg; fi
if [ -x /usr/sbin/getenforce ]; then /usr/sbin/setenforce \$oldenforce || true; fi
systemctl disable /etc/vmware-tools/easy_install/vmware-tools-firstboot.service
EOF
chmod 755 /etc/vmware-tools/easy_install/vmware-tools-firstboot.sh
/usr/sbin/adduser cloud
/usr/sbin/usermod -p '$1$YZglDWNm$8YxbHojGfqAqXjNVymPyj1' cloud
/usr/bin/chfn -f "cloud" cloud
%end

%packages
@core
binutils
chrony
gcc
kernel-devel
make
net-tools
patch
python

%end

